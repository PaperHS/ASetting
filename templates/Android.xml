<templateSet group="Android">
  <template name="header" value="/**&#10; *&#10; *     █████╗ ██████╗  ██████╗██████╗ ██╗      ██████╗  ██████╗██╗  ██╗&#10; *    ██╔══██╗██╔══██╗██╔════╝██╔══██╗██║     ██╔═══██╗██╔════╝██║ ██╔╝&#10; *    ███████║██████╔╝██║     ██████╔╝██║     ██║   ██║██║     █████╔╝&#10; *    ██╔══██║██╔══██╗██║     ██╔══██╗██║     ██║   ██║██║     ██╔═██╗&#10; *    ██║  ██║██║  ██║╚██████╗██████╔╝███████╗╚██████╔╝╚██████╗██║  ██╗&#10; *    ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═════╝ ╚══════╝ ╚═════╝  ╚═════╝╚═╝  ╚═╝ &#10; * Author       : ${USER}&#10; * Time         : ${DATE}&#10; * Edited By    :&#10; * Edited Time  :&#10; * Description  : &#10;**/" description="file header" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="genAdapter" value="class $Name$AdapterDelegate: AdapterDelegate&lt;List&lt;$Bean$&gt;&gt;(){&#10;    var onItemClick : ((pos: Int)-&gt;Unit)? = null&#10;&#10;    override fun isForViewType(items: List&lt;$Bean$&gt;, position: Int) = true&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup): $Name$ViewHolder {&#10;        val vh = $Name$ViewHolder(parent.context, LayoutInflater.from(parent.context).inflate(R.layout., parent, false))&#10;        &#10;        return vh&#10;    }&#10;&#10;    override fun onBindViewHolder(items: List&lt;$Bean$&gt;, position: Int, holder: RecyclerView.ViewHolder, payloads: MutableList&lt;Any&gt;) {&#10;      val comment = items[position]&#10;      holder as $Name$ViewHolder&#10;    }&#10;}&#10;&#10;class $Name$ViewHolder(val context: Context,itemView: View ) : RecyclerView.ViewHolder(itemView){&#10;}&#10;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Bean" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>