<templateSet group="Flutter">
  <template name="ap" value="import 'package:flutter/foundation.dart';&#10;import 'package:flutter/material.dart';&#10;import 'package:flutter/services.dart';&#10;import 'package:flutter_ebook_app/util/consts.dart';&#10;import 'package:shared_preferences/shared_preferences.dart';&#10;&#10;class AppProvider extends ChangeNotifier{&#10;  AppProvider(){&#10;    checkTheme();&#10;  }&#10;&#10;&#10;  ThemeData theme = Constants.lightTheme;&#10;  Key key = UniqueKey();&#10;  GlobalKey&lt;NavigatorState&gt; navigatorKey = GlobalKey&lt;NavigatorState&gt;();&#10;&#10;  void setKey(value) {&#10;    key = value;&#10;    notifyListeners();&#10;  }&#10;&#10;  void setNavigatorKey(value) {&#10;    navigatorKey = value;&#10;    notifyListeners();&#10;  }&#10;&#10;  void setTheme(value, c) {&#10;    theme = value;&#10;    SharedPreferences.getInstance().then((prefs){&#10;      prefs.setString(&quot;theme&quot;, c).then((val){&#10;        SystemChrome.setEnabledSystemUIOverlays(SystemUiOverlay.values);&#10;        SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(&#10;          statusBarColor: c == &quot;dark&quot; ? Constants.darkPrimary : Constants.lightPrimary,&#10;          statusBarIconBrightness: c == &quot;dark&quot; ? Brightness.light:Brightness.dark,&#10;        ));&#10;      });&#10;    });&#10;    notifyListeners();&#10;  }&#10;&#10;  ThemeData getTheme(value) {&#10;    return theme;&#10;  }&#10;&#10;  Future&lt;ThemeData&gt; checkTheme() async{&#10;    SharedPreferences prefs = await SharedPreferences.getInstance();&#10;    ThemeData t;&#10;    String r = prefs.getString(&quot;theme&quot;) == null ? &quot;light&quot; : prefs.getString(&#10;        &quot;theme&quot;);&#10;&#10;    if(r == &quot;light&quot;){&#10;      t = Constants.lightTheme;&#10;      setTheme(Constants.lightTheme, &quot;light&quot;);&#10;    }else{&#10;      t = Constants.darkTheme;&#10;      setTheme(Constants.darkTheme, &quot;dark&quot;);&#10;    }&#10;&#10;    return t;&#10;  }&#10;}" description="app provider" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
      <option name="FLUTTER" value="true" />
    </context>
  </template>
</templateSet>